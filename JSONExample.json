{"questionArray":[{"image":"none","choiceArray":[{"choice":"$O(1)$","isCorrect":"T"},{"choice":"$O(log N)$","isCorrect":"F"},{"choice":"$O(log_{TS} N)$","isCorrect":"F"},{"choice":"$O(N^{TS})$","isCorrect":"F"},{"choice":"$O(N)$","isCorrect":"F"}],"meta-data":"unused","topic":"hash table","questionText":"If a good hash function is found and a reasonable table size is used for a hash table, then the operations of put, remove, and get should achieve an average time complexity of _____ where $N$ is the number of items and $TS$ is the size of the table."},{"image":"none","choiceArray":[{"choice":"git commit","isCorrect":"F"},{"choice":"git clone","isCorrect":"F"},{"choice":"git push","isCorrect":"T"},{"choice":"git pull","isCorrect":"F"},{"choice":"git cp local remote","isCorrect":"F"}],"meta-data":"unused","topic":"git","questionText":"The _____ command will copy files from a local repository to a remote repository."},{"image":"set_subset_superset.png","choiceArray":[{"choice":"A is a subset of B, but not a proper subset of B","isCorrect":"F"},{"choice":"A is a proper subset of B","isCorrect":"F"},{"choice":"A is a superset of B, but not a proper superset of B","isCorrect":"F"},{"choice":"A is a proper superset of B","isCorrect":"T"},{"choice":"A is the complement of B","isCorrect":"F"}],"meta-data":"unused","topic":"set","questionText":"Which statement is TRUE regarding sets A and B."},{"image":"none","choiceArray":[{"choice":"when the problem size is small","isCorrect":"T"},{"choice":"when the problem size is large","isCorrect":"F"}],"meta-data":"unused","topic":"performance","questionText":"When two algorithms have different big-O time complexity, the constants and low-order terms only matter ________. "},{"image":"none","choiceArray":[{"choice":"pwd","isCorrect":"F"},{"choice":"cwd","isCorrect":"F"},{"choice":"cp","isCorrect":"F"},{"choice":"cd","isCorrect":"T"},{"choice":"mkdir","isCorrect":"F"}],"meta-data":"unused","topic":"linux","questionText":"Which command will change the current working directory to a sub-directory named $p3$?"},{"image":"none","choiceArray":[{"choice":"AVL","isCorrect":"F"},{"choice":"AVL and Red-Black","isCorrect":"F"},{"choice":"AVL and B-Tree","isCorrect":"T"},{"choice":"Red-Black and B-Tree","isCorrect":"F"},{"choice":"AVL, Red-Black, and B-Tree","isCorrect":"F"}],"meta-data":"unused","topic":"tree","questionText":"Which of the following tree sets are all height-balanced trees? Choose most complete list."},{"image":"none","choiceArray":[{"choice":"$O(N)$ , $O(N)$","isCorrect":"F"},{"choice":"$O(N)$ , $O(log_b N)$","isCorrect":"F"},{"choice":"$O(1)$ , $O(log_b N)$","isCorrect":"F"},{"choice":"$O(1)$ , $O(N)$","isCorrect":"F"},{"choice":"$O(log_b N)$ , $O(log_b N)$","isCorrect":"T"}],"meta-data":"unused","topic":"tree","questionText":"What is the best case , worst case time complexity for inserting a into a BTree where the branching factor is a positive integer $b$ and $N$ is the number of keys? Choices shown as: best case , worst case."},{"image":"btree.png","choiceArray":[{"choice":"10, 7, 15, 12, 4, 2, 30, 20","isCorrect":"F"},{"choice":"20, 30, 2, 4, 12, 15, 7, 10","isCorrect":"F"},{"choice":"15, 4, 10, 7, 12, 30, 2, 20","isCorrect":"T"},{"choice":"20, 2, 30, 12, 7, 10, 4, 15","isCorrect":"F"},{"choice":"2, 4, 7, 12, 10, 20, 15, 30","isCorrect":"F"}],"meta-data":"unused","topic":"tree","questionText":"Which insert order produces this 2-3 Tree? "},{"image":"arbitrary_graph.png","choiceArray":[{"choice":"2, 1, 5, 3, 4","isCorrect":"F"},{"choice":"3, 4, 2, 1, 5","isCorrect":"F"},{"choice":"4, 2, 1, 5, 3","isCorrect":"F"},{"choice":"4, 2, 1, 3, 5","isCorrect":"F"},{"choice":"There is no valid topological order","isCorrect":"T"}],"meta-data":"unused","topic":"graph","questionText":"Which choice is a valid topological order for this graph?"}]}